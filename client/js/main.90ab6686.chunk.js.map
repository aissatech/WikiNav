{"version":3,"sources":["components/LanguageSearch.jsx","components/TitleSearch.jsx","components/Sankey.jsx","App.jsx","index.jsx"],"names":["LanguageSearch","name","onChange","placeholder","className","cacheOptions","options","value","label","noOptionsMessage","components","DropdownIndicator","IndicatorSeparator","maxMenuHeight","theme","colors","neutral50","TitleSearch","language","useState","query","setQuery","getOptionLabel","option","title","getOptionValue","replaceAll","loadOptions","url","fetch","then","response","json","data","prefixsearch","onInputChange","Sankey","links","in","length","out","incount","outcount","source","Array","keys","concat","fill","target","map","x","Object","forEach","key","push","o","views","splice","type","orientation","node","pad","thickness","line","width","color","link","layout","autosize","margin","l","r","t","font","size","useResizeHandler","style","height","App","state","setState","setLinks","loading","setLoading","handleStateChange","action","useEffect","baseUrl","sourceReq","axios","get","destinationReq","all","spread","responses","sources","results","destinations","catch","finally","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.90ab6686.chunk.js","sourcesContent":["import React from 'react';\nimport Select from 'react-select';\n\nconst LanguageSearch = ({ name, onChange, placeholder }) => {\n  const options = [\n    { value: 'en', label: 'en.wikipedia.org' },\n    { value: 'pt', label: 'pt.wikipedia.org' },\n  ];\n\n  return (\n    <div className=\"language-search\">\n      <Select\n        name={name}\n        cacheOptions\n        onChange={onChange}\n        placeholder={placeholder}\n        options={options}\n        noOptionsMessage={() => null}\n        components={{\n          DropdownIndicator: () => null,\n          IndicatorSeparator: () => null,\n        }}\n        maxMenuHeight={175}\n        theme={(theme) => ({\n          ...theme,\n          colors: {\n            ...theme.colors,\n            neutral50: 'black',\n          },\n        })}\n      />\n    </div>\n  );\n};\n\nexport default LanguageSearch;\n","import React, { useState } from 'react';\nimport AsyncSelect from 'react-select/async';\n\nconst TitleSearch = ({\n  name, language, onChange, placeholder,\n}) => {\n  const [query, setQuery] = useState('');\n  const loadOptions = () => {\n    const url = `https://${language}.wikipedia.org/w/api.php?action=query&list=prefixsearch&format=json&pssearch=${query}&origin=*`;\n    return fetch(url)\n      .then((response) => response.json())\n      .then((data) => data.query.prefixsearch);\n  };\n\n  return (\n    <div className=\"article-search\">\n      <AsyncSelect\n        name={name}\n        placeholder={placeholder}\n        cacheOptions\n        getOptionLabel={(option) => option.title}\n        getOptionValue={(option) => option.title.replaceAll(' ', '_')}\n        loadOptions={loadOptions}\n        onInputChange={(value) => setQuery(value)}\n        onChange={onChange}\n        noOptionsMessage={() => 'Enter one or more characters to get started.'}\n        components={{\n          DropdownIndicator: () => null,\n          IndicatorSeparator: () => null,\n        }}\n        maxMenuHeight={175}\n        theme={(theme) => ({\n          ...theme,\n          colors: {\n            ...theme.colors,\n            neutral50: 'black',\n          },\n        })}\n      />\n    </div>\n  );\n};\n\nexport default TitleSearch;\n","import React from 'react';\nimport Plot from 'react-plotly.js';\n\nconst Sankey = ({ links, title }) => {\n  if (links.in.length === 0 && links.out.length === 0) {\n    return (\n      <div className=\"no-data\">\n        No data found for this title. Try another one.\n      </div>\n    );\n  }\n\n  const label = [];\n  const value = [];\n  const incount = links.in.length;\n  const outcount = links.out.length;\n  const source = [...Array(incount).keys()].concat(Array(outcount).fill(incount));\n  const target = Array(incount).fill(incount).concat([...Array(outcount).keys()].map(\n    (x) => incount + x + 1,\n  ));\n  Object.keys(links).forEach((key) => {\n    label.push(...links[key].map((o) => o.title));\n    value.push(...links[key].map((o) => o.views));\n  });\n  label.splice(incount, 0, title.replaceAll('_', ' '));\n\n  return (\n    <div className=\"sankey\">\n      <Plot\n        data={[{\n          type: 'sankey',\n          orientation: 'h',\n          node: {\n            pad: 30,\n            thickness: 10,\n            line: {\n              width: 0,\n            },\n            label,\n            color: '#47597e',\n          },\n          link: {\n            source,\n            target,\n            value,\n            color: '#dbe6fd',\n          },\n        }]}\n        layout={{\n          autosize: true,\n          margin: {\n            l: 10,\n            r: 10,\n            t: 10,\n          },\n          font: {\n            size: 10,\n          },\n        }}\n        useResizeHandler\n        style={{\n          width: '100%',\n          height: '100%',\n\n        }}\n      />\n    </div>\n  );\n};\n\nexport default Sankey;\n","import React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport ScaleLoader from 'react-spinners/ScaleLoader';\nimport LanguageSearch from './components/LanguageSearch';\nimport TitleSearch from './components/TitleSearch';\nimport Sankey from './components/Sankey';\n\nconst App = () => {\n  const [state, setState] = useState({\n    title: 'Chocolate',\n    language: 'en',\n  });\n  const [links, setLinks] = useState({\n    in: null,\n    out: null,\n  });\n  const [loading, setLoading] = useState(true);\n  const handleStateChange = (option, action) => {\n    const { name } = action;\n    const value = name === 'language' ? option.value : option.title.replaceAll(' ', '_');\n    setState({\n      ...state,\n      [name]: value,\n    });\n    setLoading(true);\n  };\n  useEffect(() => {\n    const baseUrl = 'https://wn-api-test.toolforge.org';\n    const sourceReq = axios.get(`${baseUrl}/${state.language}/${state.title}/sources?limit=10`);\n    const destinationReq = axios.get(`${baseUrl}/${state.language}/${state.title}/destinations?limit=10`);\n    axios.all([sourceReq, destinationReq])\n      .then(axios.spread((...responses) => {\n        const sources = responses[0].data.results;\n        const destinations = responses[1].data.results;\n        setLinks({\n          in: sources,\n          out: destinations,\n        });\n      }))\n      .catch(() => {\n        setLinks({\n          in: [],\n          out: [],\n        });\n      })\n      .finally(() => {\n        setLoading(false);\n      });\n  }, [state]);\n\n  return (\n    <>\n      <div className=\"top-bar\">\n        <p className=\"top-text\">WikiNav</p>\n        <LanguageSearch name=\"language\" placeholder=\"en.wikipedia.org\" onChange={handleStateChange} />\n        <TitleSearch name=\"title\" placeholder=\"Chocolate\" language={state.language} onChange={handleStateChange} />\n      </div>\n      <div className=\"sankey-wrapper\">\n        {!loading && <Sankey links={links} title={state.title} />}\n        <div className=\"scale-loader\">\n          <ScaleLoader color=\"#000000\" loading={loading} size={150} />\n        </div>\n      </div>\n    </>\n  );\n};\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './index.css';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}